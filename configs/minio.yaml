mode: standalone
replicas: 1
drivesPerNode: 2
buckets:
  - name: loki-chunks
    purge: false
    versioning: false
    objectlocking: false
  - name: loki-ruler
    purge: false
    versioning: false
    objectlocking: false
  - name: loki-admin
    purge: false
    versioning: false
    objectlocking: false
  - name: tempo
    purge: false
    versioning: false
    objectlocking: false
  - name: pyroscope
    purge: false
    versioning: false
    objectlocking: false


persistence:
  enabled: true
  size: 10Gi

resources:
  requests:
    memory: 2Gi
  
consoleIngress:
  enabled: true
  path: /
  hosts:
    - console.minio.local
  tls: []

metrics:
  serviceMonitor:
    enabled: true


policies:
  - name: loki
    statements:
      - effect: Allow
        resources:
          - 'arn:aws:s3:::loki*/*'
        actions:
          - "s3:AbortMultipartUpload"
          - "s3:GetObject"
          - "s3:DeleteObject"
          - "s3:PutObject"
          - "s3:ListBucket"
          - "s3:ListMultipartUploadParts"
  - name: tempo
    statements:
      - effect: Allow
        resources:
          - 'arn:aws:s3:::tempo*/*'
        actions:
          - "s3:AbortMultipartUpload"
          - "s3:GetObject"
          - "s3:DeleteObject"
          - "s3:PutObject"
          - "s3:ListBucket"
          - "s3:ListMultipartUploadParts"
  - name: pyroscope
    statements:
      - effect: Allow
        resources:
          - 'arn:aws:s3:::pyroscope*/*'
        actions:
          - "s3:AbortMultipartUpload"
          - "s3:GetObject"
          - "s3:DeleteObject"
          - "s3:PutObject"
          - "s3:ListBucket"
          - "s3:ListMultipartUploadParts"


users:
  - accessKey: loki
    secretKey: lokiloki
    policy: loki
  - accessKey: tempo
    secretKey: tempotempo
    policy: tempo
  - accessKey: pyroscope
    secretKey: pyroscopepyroscope
    policy: pyroscope