apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
      - name: {{ .Release.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: http 
          containerPort: {{ .Values.service.port }}
        - name: metrics
          containerPort: 8081
        args:
          - "run"
          - "--port={{ .Values.service.port }}"
          - "--dbUser={{ .Values.postgresql.user }}"  # PostgreSQL user from Helm values
          - "--dbPassword={{ .Values.postgresql.password }}"  # PostgreSQL password from Helm values
          - "--dbHost={{ .Values.postgresql.serviceName }}"  # Use PostgreSQL service DNS as host
          - "--dbName={{ .Values.postgresql.database }}"  # PostgreSQL database from Helm values
          - "--allowedOrigins={{ .Values.config.allowedOrigins }}"
          - "--otlp={{ .Values.config.otlpEndpoint}}"
        env:
          - name: GIN_MODE
            value: release
        livenessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 3
          periodSeconds: 10